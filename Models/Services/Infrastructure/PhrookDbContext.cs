using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Phrook.Models.Entities;

#nullable disable

namespace Phrook.Models.Services.Infrastructure
{
    public partial class PhrookDbContext : DbContext
    {
        public PhrookDbContext(DbContextOptions<PhrookDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Book> Books { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Book>(entity =>
            {
				entity.ToTable("Books");
				entity.HasKey(book => book.Id); //unnecessary
				entity.Property(book => book.RowVersion).IsRowVersion();

				//TODO: togliere commento quando si aggiunge tabella per recensioni
				/* entity.HasMany(course => course.Reviews)
				.WithOne(review => review.Book)
				.HasForeignKey(review => review.Id); */

				#region mapping autogenerated by reverse engineering tool
				/*
                entity.Property(e => e.Author)
                    .IsRequired()
                    .HasColumnType("TEXT (100)");

                entity.Property(e => e.Description).HasColumnType("TEXT (10000)");

                entity.Property(e => e.ImagePath).HasColumnType("TEXT (100)");

                entity.Property(e => e.Isbn)
                    .IsRequired()
                    .HasColumnType("TEXT (100)")
                    .HasColumnName("ISBN");

                entity.Property(e => e.ReadingState).HasColumnType("TEXT (100)");

                entity.Property(e => e.Tag).HasColumnType("TEXT (100)");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasColumnType("TEXT (100)");
				*/
				#endregion
            });
			

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
